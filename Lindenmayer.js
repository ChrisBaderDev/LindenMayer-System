/**
 * @author Christoph Bader
 * @date 25.01.2023
 *
 * This sketch uses Lindenmayer-Systems (L-Systems) to portray various recursive structures.
 * A L-System consists of 3 main parts:
 *
 *      1. A set of symbols (e.g.: [A,B,C], [+,-,*])
 *      2. A set of rules (e.g.: A => AB, + => -*)
 *      3. An axiom (e.g.: ABABC)
 *
 * The recursive structure will be generated by starting with the axiom (also called "Generation 0"), and
 * change depending on the given set of rules. These changes are called generations. Here's a quick example:
 *
 *      L-System = {[Symbols], [Rules], axiom}
 *               = {[A,B,C], [A => AB, B => BC, C => AC], A}
 *
 * The generations would then look as follows:
 *      Generation 0: A
 *      Generation 1: AB
 *      Generation 2: ABBC
 *      Generation 3: ABBCBCAC
 *      Generation 4: ....
 *
 * This allows to create complex patterns from a simple set of rules. This program contains examples of different 2D L-Systems.
 *
 */

/**
 * The setup function allows to set P5.js specific settings.
 */
function setup() {
  createCanvas(1000, 1000);
}

/**
 * The draw function acts as loop that should be called framerate per second times.
 */
function draw() {
  background(220);
}
